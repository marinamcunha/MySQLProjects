With DELAY as(

SELECT
d.shp_lg_facility_id AS SVC
,g.TMS_TR_PACKINGLIST_NUMBER AS HU
,a.SHP_SHIPMENT_ID AS ID
,CAST(f.SHP_DATETIME_READY_TO_SHIP_ID + INTERVAL '1' HOUR AS DATE) AS DIA_DA_VENDA
,CAST(f.SHP_DATETIME_READY_TO_SHIP_ID + INTERVAL '1' HOUR AS TIME) AS HR_DA_VENDA
,CAST(EST_DELIVERY_DATE AS DATE)+1 AS Promessa_Original
,CAST(EST_DELIVERY_OFFSET_DATE AS DATE)+1 AS Promessa_Final
,CAST(d.SHP_LG_PROMISE_DT_FROM + INTERVAL '1' HOUR AS DATE) AS Promessa_Recalculada
,CAST(d.SHP_LG_PROMISE_DT_TO + INTERVAL '1' HOUR AS DATE) AS Promessa_Logistics_Ate
,CAST(MIN(CASE WHEN e.SHP_LG_SUB_STATUS = 'sorting' THEN e.SHP_LG_SHIPMENT_CHK_DT + INTERVAL '1' HOUR END ) AS DATE) AS ENTRADA_SVC
,CAST(MIN(CASE WHEN e.SHP_LG_SUB_STATUS = 'sorting' THEN e.SHP_LG_SHIPMENT_CHK_DT + INTERVAL '1' HOUR END ) AS TIME) AS HR_ENTRADA
,CAST(a.SHP_DATE_FIRST_VISIT AS DATE) AS FIRST_VISIT
,CAST(a.SHP_DATE_FIRST_VISIT + INTERVAL '1' HOUR AS TIME) AS FIRST_VISIT_HR
,a.SHP_LEAD_TIME_DEVIATION_TYPE as LEAD_TIME
,a.SHP_HAND_TIME_DEVIATION_TYPE as HT
,a.SHP_HT_ESTIMATED_NATURAL_DAYS AS HT_META
,a.SHP_HANDLING_TIME_NATURAL_DAYS AS HT_REAL
,a.SHP_HAND_TIME_DEVIATION_DAYS as HT_Deviation
,a.SHP_TIME_DEVIATION_DAYS_TYPE as ST
,a.SHP_ST_ESTIMATED_DAYS AS ST_META
,a.SHP_SHIPPING_TIME_NATURAL_DAYS AS ST_REAL
,SHP_LOGISTIC_TYPE AS PICKING_TYPE
,f.SHP_LOGISTIC_CENTER_ID AS ORIGEM
,CAST(a.SHP_IN_HUB_TIME_DATE AS DATE) AS Inhub
,CAST(f.SHP_DATETIME_SHIPPED_ID + INTERVAL '1' HOUR AS DATE) AS Shipped,
DATETIME(TIMESTAMP_SUB(TIMESTAMP(FOS.OOT.CTP_DATE), INTERVAL -4 HOUR),'America/Sao_Paulo') as CPT_Origem
,d.shp_lg_facility_origin_id AS CONSOLIDADOR
--,d.SHP_LG_REC_ADD_CITY AS CIDADE_DESTINO
,d.shp_lg_cluster_id AS Cluster
,a.SHP_ST_OFFSET_DAYS AS OFFSET
,d.SHP_LG_DESTINATION_FACILITY_ID AS XPT
,h.SHP_ADD_DELIVERY_PREFERENCE AS TIPO
,g.SHP_LABEL_SERVICE_NAME AS TIPO_TRANSPORTE
,(CAST(a.SHP_DATE_FIRST_VISIT AS DATE))-CAST(f.SHP_DATETIME_READY_TO_SHIP_ID + INTERVAL '1' HOUR AS DATE) AS NAT_DAYS
,c.EST_DELIVERY_TYPE AS Janela_de_Promessa
,min(case when e.SHP_LG_STATUS = 'on_way' then 'On Way' ELSE 'Picked Up' end) AS Picked_Up,
MIN(e.SHP_LG_ROUTE_ID) as Primeira_Rota,
CAST(MIN(CASE WHEN e.SHP_LG_SUB_STATUS = 'on_route' THEN e.SHP_LG_SHIPMENT_CHK_DT + INTERVAL '1' HOUR END ) AS DATE) as Data_Primeira_Rota,
j.SHP_LG_SHIPMENT_SUB_STATUS as Motivo_Insucesso,
UPPER(g.TMS_TR_DIS_TRUCK_ID) as Placa_LH,
CASE WHEN (UPPER(oot.SUBCANALIZATION) like '%A' or oot.LAST_MILE_CARRIER like 'Azul Air') then 'AÃ©reo' else 'Rodo' end Modal,

CASE WHEN step2.FACILITY_ID is null then
  (CASE WHEN step2byshp.FACILITY_ID is null then
   (CASE WHEN d.SHP_LG_FACILITY_ID = 'SC_ZS' THEN 'SSP1' ELSE d.SHP_LG_FACILITY_ID END) else step2byshp.FACILITY_ID END) else step2.FACILITY_ID end Destino_Step1,

CASE WHEN step2.HU_ID is null then step2byshp.HU_ID else step2.HU_ID end HU_Cons1,
CASE WHEN step2.INHUB_DT is null then step2byshp.INHUB_DT ELSE step2.INHUB_DT END Inhub_Cons1,
CASE WHEN step2.CPT_OPS_DT is null then step2byshp.CPT_OPS_DT ELSE step2.CPT_OPS_DT END CPT_Cons1,
CASE WHEN step2.SHIPPED_DT is null then step2byshp.SHIPPED_DT ELSE step2.SHIPPED_DT END Shipped_Cons1,
CASE WHEN UPPER(step2.Placa_LH_Cons) is null then UPPER(step2byshp.Placa_LH_Cons) ELSE UPPER(step2.Placa_LH_Cons) END Placa_LH_Cons1,

CASE WHEN (step3.FACILITY_ID is null and (step2.FACILITY_ID is not null OR step2byshp.FACILITY_ID is not null)) then
  (CASE WHEN (step3byshp.FACILITY_ID is null and (step2.FACILITY_ID is not null OR step2byshp.FACILITY_ID is not null)) then (CASE WHEN d.SHP_LG_FACILITY_ID = 'SC_ZS' THEN 'SSP1' ELSE d.SHP_LG_FACILITY_ID END) else step3byshp.FACILITY_ID END) else step3.FACILITY_ID end Destino_Step2,

CASE WHEN step3.HU_ID is null then step3byshp.HU_ID else step3.HU_ID end HU_Cons2,
CASE WHEN step3.INHUB_DT is null then step3byshp.INHUB_DT ELSE step3.INHUB_DT END Inhub_Cons2,
CASE WHEN step3.CPT_OPS_DT is null then step3byshp.CPT_OPS_DT ELSE step3.CPT_OPS_DT END CPT_Cons2,
CASE WHEN step3.SHIPPED_DT is null then step3byshp.SHIPPED_DT ELSE step3.SHIPPED_DT END Shipped_Cons2,
CASE WHEN UPPER(step3.Placa_LH_Cons) is null then UPPER(step3byshp.Placa_LH_Cons) ELSE UPPER(step3.Placa_LH_Cons) END Placa_LH_Cons2,

CASE WHEN (step3.NEXT_FACILITY_ID is null and (step3.FACILITY_ID is not null OR step3byshp.FACILITY_ID is not null)) then
  (CASE WHEN (step3byshp.NEXT_FACILITY_ID is null and (step3.FACILITY_ID is not null OR step3byshp.FACILITY_ID is not null)) then (CASE WHEN d.SHP_LG_FACILITY_ID = 'SC_ZS' THEN 'SSP1' ELSE d.SHP_LG_FACILITY_ID END) else step3byshp.NEXT_FACILITY_ID END) else step3.NEXT_FACILITY_ID end Destino_Step3,
CAST(k.chk_date + interval '1' hour as date) as Coletado,
CAST(l.chk_date + interval '1' hour as date) as Dropado,
j.SHP_LG_VEHICLE_TYPE as Veiculo_LM,
MIN(DLV.SHP_LG_SHIPMENT_CHK_DT + interval'1' hour) as Entrega,
case when(e.SHP_LG_STATUS = 'on_route' and e.SHP_LG_SUB_STATUS = 'delivered') then e.SHP_LG_ROUTE_ID else null end as Rota_Entrega


FROM WHOWNER.LK_SHP_SHIPMENTS_TIMES as a
LEFT JOIN WHOWNER.BT_SHP_LG_SHIPMENTS_ROUTES b ON b.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.LK_SHP_ORIGINAL_PROMISE c ON c.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.BT_SHP_LG_SHIPMENTS d ON d.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.BT_SHP_LG_SHIPMENT_CHECKPOINTS e ON e.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.BT_SHP_SHIPMENTS f ON f.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.BT_TMS_TRACKING g ON g.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.LK_SHP_ADDRESS h ON f.shp_receiver_address = h.shp_add_id
LEFT JOIN WHOWNER.BT_SHP_LG_SHIPMENTS_ROUTES_RELATION as i on i.SHP_SHIPMENT_ID = a.shp_shipment_id
LEFT JOIN WHOWNER.BT_SHP_LG_SHIPMENTS_ROUTES as j on j.SHP_SHIPMENT_ID = a.shp_shipment_id

LEFT JOIN `meli-bi-data.SHIPPING_BI.BT_SHP_MT_FOS_METRICS` as FOS
ON FOS.ENTITY_ID = cast(a.SHP_SHIPMENT_ID as string)
AND FOS.SITE_ID = 'MLB' AND g.TMS_TR_LOGISTIC_CENTER_ID = FOS.FACILITY_ID

LEFT JOIN `meli-bi-data.SHIPPING_BI.VW_OPS_SHIPMENTS_OOT` as oot
on oot.SHP_SHIPMENT_ID = a.SHP_SHIPMENT_ID AND oot.FACILITY_ID = g.TMS_TR_LOGISTIC_CENTER_ID

left join
(select SHP_SHIPMENT_ID, shp_sub_status, shp_checkpoint_date as chk_date
from `meli-bi-data.WHOWNER.BT_SHP_ELASTICSEARCH_CHECKPOINTS`
where shp_sub_status IN ('picked_up') 
and shp_checkpoint_date >= (current_date - 60)
) as k on k.SHP_SHIPMENT_ID = a.shp_shipment_id

left join
(select SHP_SHIPMENT_ID, shp_sub_status, shp_checkpoint_date as chk_date
from `meli-bi-data.WHOWNER.BT_SHP_ELASTICSEARCH_CHECKPOINTS`
where shp_sub_status IN ('dropped_off') 
and shp_checkpoint_date >= (current_date - 60)
) l on l.SHP_SHIPMENT_ID = a.shp_shipment_id

LEFT JOIN `meli-bi-data.WHOWNER.BT_SHP_LG_SHIPMENT_CHECKPOINTS` CON
ON CON.SHP_SHIPMENT_ID = a.SHP_SHIPMENT_ID
AND CON.SHP_LG_STATUS = 'at_station'
AND CON.SHP_LG_SUB_STATUS = 'sorting'

LEFT JOIN `meli-bi-data.WHOWNER.BT_SHP_LG_SHIPMENT_CHECKPOINTS` DLV
ON DLV.SHP_SHIPMENT_ID = a.SHP_SHIPMENT_ID
AND DLV.SHP_LG_STATUS = 'on_route'
AND DLV.SHP_LG_SUB_STATUS = 'delivered'

LEFT JOIN `meli-bi-data.WHOWNER.BT_SHP_LG_SHIPMENT_CHECKPOINTS` DIS
ON DIS.SHP_SHIPMENT_ID = a.SHP_SHIPMENT_ID
AND DIS.SHP_LG_STATUS = 'on_route'
AND DIS.SHP_LG_SUB_STATUS IS NULL


left join
(SELECT
SHIPMENTS
, HU_ID
, FACILITY_ID
, HU.EVENT_DATE.CHECKIN_ACCEPT as INHUB_DT
, CPT_OPS_DT
, HU.EVENT_DATE.SHIPPED as SHIPPED_DT
, looker.HU.VEHICLE_PLATE as Placa_LH_Cons

FROM `meli-bi-data.SHIPPING_BI.VW_OPS_SHIPMENTS_OOT_AGRUP` oot
LEFT JOIN `meli-bi-data.SHIPPING_BI.BT_SHP_MT_HU_MONITOREO` looker on oot.HU_ID = looker.HU.ID and oot.FACILITY_ID = looker.LOGISTIC_CENTER_ID
WHERE looker.STEP.ORDER = 2 ) step2 on step2.HU_ID = g.TMS_TR_PACKINGLIST_NUMBER

left join
(SELECT
SHP_SHIPMENT_ID
, HU_ID
, FACILITY_ID
, INHUB_DT
, CPT_OPS_DT
, SHIPPED_DT
, looker.HU.VEHICLE_PLATE as Placa_LH_Cons

FROM `meli-bi-data.SHIPPING_BI.OPS_SHIPMENTS_STEPS_OOT` oot
LEFT JOIN `meli-bi-data.SHIPPING_BI.BT_SHP_MT_HU_MONITOREO` looker on oot.HU_ID = looker.HU.ID and oot.FACILITY_ID = looker.LOGISTIC_CENTER_ID
WHERE oot.STEP = 2 ) step2byshp on step2byshp.SHP_SHIPMENT_ID = a.SHP_SHIPMENT_ID

left join
(SELECT
SHIPMENTS
, HU_ID
, FACILITY_ID
, NEXT_FACILITY_ID
, HU.EVENT_DATE.CHECKIN_ACCEPT as INHUB_DT
, CPT_OPS_DT
, HU.EVENT_DATE.SHIPPED as SHIPPED_DT
, looker.HU.VEHICLE_PLATE as Placa_LH_Cons

FROM `meli-bi-data.SHIPPING_BI.VW_OPS_SHIPMENTS_OOT_AGRUP` oot
LEFT JOIN `meli-bi-data.SHIPPING_BI.BT_SHP_MT_HU_MONITOREO` looker on oot.HU_ID = looker.HU.ID and oot.FACILITY_ID = looker.LOGISTIC_CENTER_ID
WHERE looker.STEP.ORDER = 3 ) step3 on step3.HU_ID = g.TMS_TR_PACKINGLIST_NUMBER

left join
(SELECT
SHP_SHIPMENT_ID
, HU_ID
, FACILITY_ID
, NEXT_FACILITY_ID
, INHUB_DT
, CPT_OPS_DT
, SHIPPED_DT
, looker.HU.VEHICLE_PLATE as Placa_LH_Cons

FROM `meli-bi-data.SHIPPING_BI.OPS_SHIPMENTS_STEPS_OOT` oot
LEFT JOIN `meli-bi-data.SHIPPING_BI.BT_SHP_MT_HU_MONITOREO` looker on oot.HU_ID = looker.HU.ID and oot.FACILITY_ID = looker.LOGISTIC_CENTER_ID
WHERE oot.STEP = 3 ) step3byshp on step3byshp.SHP_SHIPMENT_ID = a.SHP_SHIPMENT_ID


WHERE CAST(a.SHP_DATE_FIRST_VISIT as date) between '2022-12-09' AND '2022-12-12'
AND d.shp_lg_facility_id IN ('SPR1')
AND c.sit_site_id = 'MLB'
AND a.SHP_LEAD_TIME_DEVIATION_TYPE = 'delay'

GROUP BY 1,2,3,4,5,6,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58 --36,37
),

FM as (with fmile as (SELECT
C.SHP_CO_SITE_ID AS SIT_SITE_ID,
LG.SHP_LG_ROUTE_ID,
LG.SHP_LG_CODE AS Rota_FM,
CAST(SHIPPING_BI.FN_API_TIMEZONE(C.SHP_CO_SITE_ID, LG.SHP_LG_DATE_CREATED) AS DATE) AS ROUTE_DATE,
RS.SHP_LG_STOP_ID,
TU.SHP_LG_TR_RELATED_ENTITY_ID AS SHP_SHIPMENT_ID,
ROW_NUMBER() over (partition by LG.SHP_LG_CODE order by LG.SHP_LG_DATE_CREATED DESC) as Rnk

FROM
WHOWNER.LK_SHP_LG_ROUTES LG
INNER JOIN WHOWNER.LK_SHP_LG_ROUTE_STOP AS RS ON RS.SHP_LG_ROUTE_ID = LG.SHP_LG_ROUTE_ID AND SHP_LG_STOP_TYPE = 'operational'
INNER JOIN WHOWNER.BT_SHP_LG_ORDER AS O ON (O.SHP_LG_ROUTE_STOP_ID = RS.SHP_LG_STOP_ID)
INNER JOIN WHOWNER.LK_SHP_COMPANIES AS C ON (C.SHP_COMPANY_ID = LG.SHP_COMPANY_ID)
INNER JOIN WHOWNER.LK_SHP_LG_ORDER_TU AS OTU ON (OTU.SHP_LG_ORDER_ID = O.SHP_LG_ORDER_ID)
INNER JOIN WHOWNER.LK_SHP_LG_TRANSPORT_UNIT AS TU ON
(OTU.SHP_LG_TRANSPORT_UNIT_ID = TU.SHP_LG_TRANSPORT_UNIT_ID
AND TU.SHP_LG_TR_STEP_TYPE = 'first_mile')
WHERE 1=1
-- AND CAST(LG.SHP_LG_DATE_CREATED AS DATE) BETWEEN DATE '2022-08-01' AND DATE '2022-08-14'
AND LG.SHP_LG_TYPE = 'first_mile'
AND C.SHP_CO_SITE_ID = 'MLB')

select Rota_FM,SHP_SHIPMENT_ID from fmile where Rnk = 1),

MM as (
with lh as (
  
SELECT DISTINCT
step.SHP_LG_ROUTE_ID AS ROUTE_ID
, step.SHP_LG_SEQUENCE as STEP
, start.SHP_LG_STOP_FACILITY_ID as ORIGEM_TRECHO
, CASE WHEN finish.SHP_LG_STOP_FACILITY_ID = 'SC_ZS' THEN 'SSP1'
ELSE finish.SHP_LG_STOP_FACILITY_ID END DESTINO_TRECHO
, tu.SHP_LG_RELATED_ENTITY_ID as HU

FROM `WHOWNER.BT_LG_MIDDLE_MILE_STEP` step
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_STOP` start on step.SHP_LG_STEP_ORIGIN_STOP_ID = start.SHP_LG_STOP_ID
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_STOP` finish on step.SHP_LG_STEP_DESTINATION_STOP_ID = finish.SHP_LG_STOP_ID
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_ORDER` pickup on pickup.ORD_ORDER_ID = start.PICKUP_ORDER_ID and start.PICKUP_ORDER_ID is not null
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_ORDER_TRANS_UNIT` tupu on tupu.ORD_ORDER_ID = pickup.ORD_ORDER_ID
LEFT join `WHOWNER.BT_LG_MIDDLE_MILE_TRANS_UNIT` tu on tu.SGP_LG_TRANSPORT_UNIT_ID = tupu.SGP_LG_TRANSPORT_UNIT_ID and tu.SHP_LG_RELATED_ENTITY_TYPE = 'pallet'

WHERE 1=1

and SHP_LG_STEP_CREATED_DTTM BETWEEN current_date - 60 and current_date
and tu.SHP_LG_RELATED_ENTITY_ID is not null
and step.SIT_SITE_ID = 'MLB'

union all (

SELECT DISTINCT
step.SHP_LG_ROUTE_ID AS ROUTE_ID
, step.SHP_LG_SEQUENCE as STEP
, start.SHP_LG_STOP_FACILITY_ID as ORIGEM_TRECHO
, CASE WHEN finish.SHP_LG_STOP_FACILITY_ID = 'SC_ZS' THEN 'SSP1'
ELSE finish.SHP_LG_STOP_FACILITY_ID END DESTINO_TRECHO
, tu.SHP_LG_RELATED_ENTITY_ID as HU

FROM `WHOWNER.BT_LG_MIDDLE_MILE_STEP` step
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_STOP` start on step.SHP_LG_STEP_ORIGIN_STOP_ID = start.SHP_LG_STOP_ID
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_STOP` finish on step.SHP_LG_STEP_DESTINATION_STOP_ID = finish.SHP_LG_STOP_ID
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_ORDER` dropoff on dropoff.ORD_ORDER_ID = start.DROPOFF_ORDER_ID and start.DROPOFF_ORDER_ID is not null
LEFT JOIN `WHOWNER.BT_LG_MIDDLE_MILE_ORDER_TRANS_UNIT` tudo on tudo.ORD_ORDER_ID = dropoff.ORD_ORDER_ID
LEFT join `WHOWNER.BT_LG_MIDDLE_MILE_TRANS_UNIT` tu on tu.SGP_LG_TRANSPORT_UNIT_ID = tudo.SGP_LG_TRANSPORT_UNIT_ID and tu.SHP_LG_RELATED_ENTITY_TYPE = 'pallet'

WHERE 1=1

and SHP_LG_STEP_CREATED_DTTM BETWEEN current_date - 60 and current_date
and tu.SHP_LG_RELATED_ENTITY_ID is not null
and step.SIT_SITE_ID = 'MLB'
))

SELECT DISTINCT
lh.ROUTE_ID AS ROTA,
lh.STEP as STEP,
oot.FACILITY_ID AS ORIGEM_HU,
lh.ORIGEM_TRECHO AS ORIGEM_TRECHO,
COALESCE(mm.CPT_OFICIAL,mm.CPT) as ATD,
PRAZO_ETA_DESTINO as ETA,
mm.ETA_DESTINO_OFICIAL as ATA,
lh.DESTINO_TRECHO as DESTINO,
lh.HU as HU,
ANALISE_ETA_DESTINO as SLA_ROTA,
STATUS_ROTA,
OCORRENCIA_ETA_DESTINO as OCORRENCIA

from lh lh
LEFT JOIN `meli-bi-data.TMP.mlb_brasil` mm on mm.ROUTE_ID = lh.ROUTE_ID and mm.STEP = lh.STEP
left join `meli-bi-data.SHIPPING_BI.VW_OPS_SHIPMENTS_OOT` as oot on oot.HU_ID = lh.HU -- para v3 a tabela traz a origem real e o consolidador - para milkrun a tabela traz a origem da rota independente do trecho - isso satisfaz ambos os casos e conecta corretamente a HU ao destino final (SVC)
)

SELECT DISTINCT

t1.SVC,
t1.HU,
t1.ID
,t1.DIA_DA_VENDA
,t1.HR_DA_VENDA
,t1.Promessa_Original
,t1.Promessa_Final
,t1.Promessa_Recalculada
,t1.Promessa_Logistics_Ate
,t1.ENTRADA_SVC
,t1.HR_ENTRADA
,t1.FIRST_VISIT
,t1.FIRST_VISIT_HR
,t1.LEAD_TIME
,t1.HT
,t1.HT_META
,t1.HT_REAL
,t1.HT_Deviation
,t1.ST
,t1.ST_META
,t1.ST_REAL
,t1.PICKING_TYPE
,t1.ORIGEM
,t1.Inhub
,t1.Shipped,
t1.CPT_Origem
,t1.CONSOLIDADOR
--,t1.CIDADE_DESTINO
,t1.Cluster
,t1.OFFSET
,t1.XPT
,t1.TIPO
--,t1.TIPO_TRANSPORTE
--,t1.NAT_DAYS
--,t1.Janela_de_Promessa
--,t1.Picked_Up
,t1.Primeira_Rota,
t1.Data_Primeira_Rota,
t1.Motivo_Insucesso,
t1.Placa_LH,
routelh.ROTA as Rota_LH,
t1.Modal,
t1.Destino_Step1,
CASE WHEN step1_byroute.ROTA IS NULL THEN step1_byhu.ROTA ELSE step1_byroute.ROTA END ROTA_step1,
CASE WHEN step1_byroute.ATD IS NULL THEN step1_byhu.ATD ELSE step1_byroute.ATD END ATD_step1,
CASE WHEN step1_byroute.ETA IS NULL THEN step1_byhu.ETA ELSE step1_byroute.ETA END ETA_step1,
CASE WHEN step1_byroute.ATA IS NULL THEN step1_byhu.ATA ELSE step1_byroute.ATA END ATA_step1,
CASE WHEN step1_byroute.SLA_ROTA IS NULL THEN step1_byhu.SLA_ROTA ELSE step1_byroute.SLA_ROTA END SLA_ROTA_step1,
CASE WHEN step1_byroute.STATUS_ROTA IS NULL THEN step1_byhu.STATUS_ROTA ELSE step1_byroute.STATUS_ROTA END STATUS_ROTA_step1,
CASE WHEN step1_byroute.OCORRENCIA IS NULL THEN step1_byhu.OCORRENCIA ELSE step1_byroute.OCORRENCIA END OCORRENCIA_step1,
t1.HU_Cons1,
t1.Inhub_Cons1,
t1.CPT_Cons1,
t1.Shipped_Cons1,
t1.Placa_LH_Cons1,
t1.Destino_Step2,
CASE WHEN step2_byroute.ROTA IS NULL THEN step2_byhu.ROTA ELSE step2_byroute.ROTA END ROTA_step2,
CASE WHEN step2_byroute.ATD IS NULL THEN step2_byhu.ATD ELSE step2_byroute.ATD END ATD_step2,
CASE WHEN step2_byroute.ETA IS NULL THEN step2_byhu.ETA ELSE step2_byroute.ETA END ETA_step2,
CASE WHEN step2_byroute.ATA IS NULL THEN step2_byhu.ATA ELSE step2_byroute.ATA END ATA_step2,
CASE WHEN step2_byroute.SLA_ROTA IS NULL THEN step2_byhu.SLA_ROTA ELSE step2_byroute.SLA_ROTA END SLA_ROTA_step2,
CASE WHEN step2_byroute.STATUS_ROTA IS NULL THEN step2_byhu.STATUS_ROTA ELSE step2_byroute.STATUS_ROTA END STATUS_ROTA_step2,
CASE WHEN step2_byroute.OCORRENCIA IS NULL THEN step2_byhu.OCORRENCIA ELSE step2_byroute.OCORRENCIA END OCORRENCIA_step2,
t1.HU_Cons2,
t1.Inhub_Cons2,
t1.CPT_Cons2,
t1.Shipped_Cons2,
t1.Placa_LH_Cons2,
t1.Destino_Step3,
CASE WHEN step3_byroute.ROTA IS NULL THEN step3_byhu.ROTA ELSE step3_byroute.ROTA END ROTA_step3,
CASE WHEN step3_byroute.ATD IS NULL THEN step3_byhu.ATD ELSE step3_byroute.ATD END ATD_step3,
CASE WHEN step3_byroute.ETA IS NULL THEN step3_byhu.ETA ELSE step3_byroute.ETA END ETA_step3,
CASE WHEN step3_byroute.ATA IS NULL THEN step3_byhu.ATA ELSE step3_byroute.ATA END ATA_step3,
CASE WHEN step3_byroute.SLA_ROTA IS NULL THEN step3_byhu.SLA_ROTA ELSE step3_byroute.SLA_ROTA END SLA_ROTA_step3,
CASE WHEN step3_byroute.STATUS_ROTA IS NULL THEN step3_byhu.STATUS_ROTA ELSE step3_byroute.STATUS_ROTA END STATUS_ROTA_step3,
CASE WHEN step3_byroute.OCORRENCIA IS NULL THEN step3_byhu.OCORRENCIA ELSE step3_byroute.OCORRENCIA END OCORRENCIA_step3,
t1.Coletado,
t1.Dropado,
t1.Veiculo_LM,
t2.Rota_FM,
t1.Entrega,
t1.Rota_Entrega

from DELAY as t1
LEFT JOIN FM as t2 on t1.ID = t2.SHP_SHIPMENT_ID  
LEFT JOIN MM as routelh on routelh.HU = t1.HU and routelh.ORIGEM_TRECHO = t1.ORIGEM and routelh.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as step1_byroute on routelh.ROTA = step1_byroute.ROTA and step1_byroute.DESTINO = t1.Destino_Step1 and step1_byroute.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as step1_byhu on step1_byhu.HU = t1.HU and step1_byhu.ORIGEM_HU = t1.ORIGEM and step1_byhu.DESTINO = t1.Destino_Step1 and step1_byhu.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as routelh_step2 on routelh_step2.HU = t1.HU_Cons1 and routelh_step2.ORIGEM_TRECHO = t1.Destino_Step1 and routelh_step2.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as step2_byroute on routelh_step2.ROTA = step2_byroute.ROTA and step2_byroute.DESTINO = t1.Destino_Step2 and step2_byroute.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as step2_byhu on step2_byhu.HU = t1.HU_Cons1 and step2_byhu.ORIGEM_TRECHO = t1.Destino_Step1 and step2_byhu.DESTINO = t1.Destino_Step2 and step2_byhu.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as routelh_step3 on routelh_step3.HU = t1.HU_Cons2 and routelh_step3.ORIGEM_TRECHO = t1.Destino_Step2 and routelh_step3.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as step3_byroute on routelh_step3.ROTA = step3_byroute.ROTA and step3_byroute.DESTINO = t1.Destino_Step3 and step3_byroute.STATUS_ROTA != 'CANCELED'
LEFT JOIN MM as step3_byhu on step3_byhu.HU = t1.HU_Cons2 and step3_byhu.ORIGEM_TRECHO = t1.Destino_Step2 and step3_byhu.DESTINO = t1.Destino_Step3 and step3_byhu.STATUS_ROTA != 'CANCELED'
